.MODEL SMALL
.STACK 256H

DAT SEGMENT 
INP DB 'Enter Array: $'
ARRAY DW 100 DUP(30H)
;ARRAY DW 000CH, 000EH, 000DH, 000FH, 0010H, 000AH
DAT ends

COD segment
assume cs:COD, DS:DAT
MAIN PROC
	MOV AX, DAT
	MOV DS, AX
	LEA SI, ARRAY
	CALL INPUTARRAY
	MOV CX, SI
	LEA SI, ARRAY
	SUB CX, SI
	CALL INSSORT
	CALL NLINE
	CALL PRINTA
	CALL ENDPROG
MAIN ENDP

CHECKN PROC
	PUSH AX
	PUSH DX
	MOV AX, CX
	CALL PRINTINT
	CALL NLINE
	POP DX
	POP AX
	RET
CHECKN ENDP

PRINTA PROC
	PUSH AX
	PUSH BX
	PUSH DX
	MOV BX, 0
	SUB CX, 2
	LOOPP:
		MOV AX, ARRAY[BX]
		CALL PRINTINT
		MOV AH, 2
		MOV DL, 20H
		INT 21H
		INC BX
		INC BX
		CMP BX, CX
	JL LOOPP
	ADD CX, 2
	POP DX
	POP BX
	POP AX
	RET
PRINTA ENDP

INSSORT PROC
	MOV AX, 2
LOOP1:	
		CMP AX, CX
		JGE SKIP1
		MOV DI, AX
		PUSH CX
		LOOP2:
			XOR DI, 0
			JZ SKIP2
			MOV DX, ARRAY[DI-2]
			CMP DX, ARRAY[DI]
			JNG SKIP2
			MOV CX, ARRAY[DI]
			MOV ARRAY[DI], DX
			MOV ARRAY[DI-2], CX
			SUB DI, 2
			CMP DI, DX
		JMP LOOP2
	SKIP2:
		ADD AX, 2
		POP CX
	JMP LOOP1
SKIP1:
	ADD CX, 2
	RET
INSSORT ENDP

NLINE PROC
	MOV dl, 10
	MOV ah, 02h
	INT 21h
	MOV dl, 13
	MOV ah, 02h
	INT 21h
	RET
NLINE ENDP

ENDPROG PROC
	MOV AH, 4ch
	INT 21H
ENDPROG ENDP

GETNUM PROC
	PUSH CX
	MOV BX, 0
	MOV AL,30H
	LoopGetNum:
		SUB AL, 30H
		MOV CH,AL
		MOV AX,BX
		MOV CL, 0AH
		MUL CL
		MOV CL,CH
		MOV CH, 0
		ADD AX,CX
		MOV BX,AX
		MOV AH, 1
		INT 21H
		CMP AL, 0DH ;ENTER key pressed, exit
		JE Outside
		CMP AL, 20H
		JE Outside
		JMP LoopGetNum
	Outside:
	POP CX
	RET
GETNUM ENDP

INPUTARRAY PROC
	MOV AH, 09H
	LEA DX, INP
	INT 21H
	MOV CX, 100
	Loopinp:
		CALL GETNUM
		MOV [SI], BX
		INC SI
		INC SI
		CMP AL, 0DH
		JE HereArray
	LOOP Loopinp
	HereArray:
	RET
INPUTARRAY ENDP
NUM2STRPRINT PROC
  MOV  BX, 10 
  MOV  CX, 0 
CYCLE1:       
  MOV  DX, 0 
  DIV  BX 
  PUSH DX 
  INC  CX 
  CMP  AX, 0  
  JNE  CYCLE1  
;NOW RETRIEVE PUSHED DIGITS.
CYCLE2:  
  POP  DX        
  ADD  DL, 48 ;CONVERT DIGIT TO CHARACTER.
  MOV AH, 2
  INT 21H
  LOOP CYCLE2
  RET
NUM2STRPRINT ENDP

PRINTINT PROC
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX
	CALL NUM2STRPRINT
	POP DX
	POP CX
	POP BX
	POP AX
	RET
PRINTINT ENDP

END MAIN